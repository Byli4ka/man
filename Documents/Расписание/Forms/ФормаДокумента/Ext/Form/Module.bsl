&НаКлиенте
Процедура КурсПриИзменении(Элемент)
	
	Если Объект.Курс.Пустой() Тогда
		Объект.Длительность = 0;
		
	Иначе
		ИнформацияОбКурсе = ПолучитьИнформациюОбКурсе(Объект.Курс, Объект.Дата);
		Объект.Длительность = ИнформацияОбКурсе.Длительность;
		 
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИнформациюОбКурсе(Курс, Дата)
	
	Результат = Новый Структура("Длительность", 0, 0);

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Курсы.Длительность КАК Длительность
		|ИЗ
		|	Справочник.Курсы КАК Курсы
		|ГДЕ
		|	Курсы.Ссылка = &Курс";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Курс", Курс);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
	
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВремяНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПослеРасписания(ПараметрыРасписания)

	Оповестить("Изменение_Расписание");
	
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.Цвет = Новый ХранилищеЗначения(Цвет); 
	
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	Цвет = ТекущийОбъект.Цвет.Получить();
	
КонецПроцедуры

