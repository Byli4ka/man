
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Дата = ТекущаяДата();
	Платформа = Справочники.Платформа.ОсновнаяПлатформа();
	
	СоздатьИзмеренияПланировщика();
	ОбновитьПериодОтображенияПланировщика();  
	
	ЗаполнитьРасписание();
	

КонецПроцедуры 

&НаСервере
Процедура ОбновитьПериодОтображенияПланировщика();
	
	 Начало = НачалоДня(Дата) + 8*3600;
	 Конец = НачалоДня(Дата) + 18*3600;
	 
	 Планировщик.ТекущиеПериодыОтображения.Очистить();
	 Планировщик.ТекущиеПериодыОтображения.Добавить(Начало, Конец);

КонецПроцедуры // ОбновитьПериодОтображенияПланировщика();()

&НаСервере
Процедура ЗаполнитьРасписание();

	Планировщик.Элементы.Очистить();

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		          "ВЫБРАТЬ
		          |	Расписание.Дата КАК Дата,
		          |	Расписание.Преподаватель КАК Преподаватель,
		          |	Расписание.Длительность КАК Длительность,
		          |	Расписание.ДатаОкончания КАК ДатаОкончания,
		          |	Расписание.Платформа КАК Платформа,
		          |	Расписание.ДомашнееЗадание КАК ДомашнееЗадание,
		          |	Расписание.Ссылка КАК Ссылка,
		          |	Расписание.Группа КАК Группа,
		          |	ПРЕДСТАВЛЕНИЕ(Расписание.Курс) КАК Курс,
		          |	Расписание.НомерZoom КАК НомерZoom,
		          |	Расписание.Цвет КАК Цвет
		          |ИЗ
		          |	Документ.Расписание КАК Расписание
		          |ГДЕ
		          |	Расписание.Проведен
		          |	И Расписание.Платформа = &Платформа
		          |	И Расписание.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания";
	
	  Запрос.УстановитьПараметр("Платформа", Платформа); 
	  Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(Дата)); 
	  Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(Дата));
 
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл   
		
		 ЗначенияИзмерений = Новый Соответствие;
		 ЗначенияИзмерений.Вставить("Преподаватель", Выборка.Преподаватель);
		 
		 
		 
		 ЖирныйШрифт = Новый Шрифт(,,Истина);
		 
		 ПредставлениеГруппы = Строка(Выборка.Группа) + ", " + Выборка.НомерZoom;
		 МассивСтрок = Новый Массив;
		 МассивСтрок.Добавить(Новый ФорматированнаяСтрока(ПредставлениеГруппы, ЖирныйШрифт));
		 МассивСтрок.Добавить(Символы.ПС);
		 МассивСтрок.Добавить(Выборка.Курс);
		 МассивСтрок.Добавить(Символы.ПС);
         Если ЗначениеЗаполнено(Выборка.ДомашнееЗадание) Тогда
			МассивСтрок.Добавить("-- " + Выборка.ДомашнееЗадание);
		КонецЕсли;
		 
		 		 
		
		 ЭлементПланировщика = Планировщик.Элементы.Добавить(Выборка.Дата, Выборка.ДатаОкончания);
		 ЭлементПланировщика.ЗначенияИзмерений = Новый ФиксированноеСоответствие(ЗначенияИзмерений); 
		 ЭлементПланировщика.Значение = Выборка.Ссылка;
		 ЭлементПланировщика.Текст =  Новый ФорматированнаяСтрока(МассивСтрок);
		 Цвет = Выборка.Цвет.Получить();
		 Если Цвет = Неопределено Тогда
			Цвет = WebЦвета.БледноЛиловый;
		 КонецЕсли;
		
		ЭлементПланировщика.ЦветФона = Цвет;

		 
		 
	КонецЦикла;	
		
	
КонецПроцедуры // ()


&НаСервере
Процедура СоздатьИзмеренияПланировщика();

	  Измерение = Планировщик.Измерения.Добавить("Преподаватель");
	
	Выборка = Справочники.Сотрудники.Выбрать();

	
	Пока Выборка.Следующий() Цикл
	   Если Выборка.ПометкаУдаления Тогда
	      Продолжить;
	   КонецЕсли;
		
	   ЗначениеИзмерения = Измерение.Элементы.Добавить(Выборка.Ссылка);
	   ЗначениеИзмерения.Текст = Выборка.Наименование + Символы.ПС + Выборка.Должность;
	   ЗначениеИзмерения.ЦветРамки = WebЦвета.Синий;
	   
	КонецЦикла;


КонецПроцедуры // ()

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьРасписание();
КонецПроцедуры

&НаКлиенте
Процедура ПлатформаПриИзменении(Элемент)
	ОбновитьПериодОтображенияПланировщика();
	ЗаполнитьРасписание();
КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередСозданием(Элемент, Начало, Конец, ЗначенияИзмерений, Текст, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;                     
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Платформа", Платформа);
	ЗначенияЗаполнения.Вставить("Дата", Начало);
	ЗначенияЗаполнения.Вставить("ДатаОкончания", Конец);
	ЗначенияЗаполнения.Вставить("Преподаватель", ЗначенияИзмерений["Преподаватель"]);
	
	СтруктураПараметров = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("Документ.Расписание.ФормаОбъекта", СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Изменение_Расписание" Тогда
		ЗаполнитьРасписание();	

	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередНачаломРедактирования(Элемент, НовыйЭлемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;  
	
	ЭлементПланировщика = ВыделенныеЭлементы[0];
	
	СтруктураПараметров = Новый Структура("Ключ", ЭлементПланировщика.Значение);
	ОткрытьФорму("Документ.Расписание.ФормаОбъекта", СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура ПланировщикПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ПланировщикПриОкончанииРедактирования(Элемент, НовыйЭлемент, ОтменаРедактирования)
	ВыделенныеЭлементы = Элемент.ВыделенныеЭлементы;  
	ЭлементПланировщика = ВыделенныеЭлементы[0];
	
	ЗначенияРеквизитов = Новый Структура;
	ЗначенияРеквизитов.Вставить("Дата", ЭлементПланировщика.Начало);
	ЗначенияРеквизитов.Вставить("ДатаОкончания", ЭлементПланировщика.Конец);
	ЗначенияРеквизитов.Вставить("Преподаватель", ЭлементПланировщика.ЗначенияИзмерений["Преподаватель"]);
	
	ОбновитьДанныеРасписания(ЭлементПланировщика.Значение, ЗначенияРеквизитов);

КонецПроцедуры
&НаСервереБезКонтекста
Процедура ОбновитьДанныеРасписания(Расписание, ЗначенияРеквизитов)
	
	ОбъектРасписания = Расписание.ПолучитьОбъект();
	
	ЕстьИзмения = Ложь;
	Для каждого Реквизит Из ЗначенияРеквизитов Цикл
		Если ОбъектРасписания[Реквизит.Ключ] <> Реквизит.Значение Тогда
			ЕстьИзмения = Истина;
			Прервать;
		КонецЕсли;		
	КонецЦикла;	
	
	Если ЕстьИзмения Тогда
		ЗаполнитьЗначенияСвойств(ОбъектРасписания, ЗначенияРеквизитов);
		ОбъектРасписания.Длительность = (ОбъектРасписания.ДатаОкончания - ОбъектРасписания.Дата) / 60;
		ОбъектРасписания.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;   
	
КонецПроцедуры // ОбновитьДанныеЗаписи()

